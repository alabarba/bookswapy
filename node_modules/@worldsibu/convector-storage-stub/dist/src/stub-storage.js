"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var convector_core_1 = require("@worldsibu/convector-core");
var fabric_chaincode_utils_1 = require("@theledger/fabric-chaincode-utils");
fabric_chaincode_utils_1.Transform.isObject = function (data) { return data !== null && typeof data === 'object'; };
var StubStorage = (function (_super) {
    tslib_1.__extends(StubStorage, _super);
    function StubStorage(stub) {
        var _this = _super.call(this) || this;
        _this.stubHelper = new fabric_chaincode_utils_1.StubHelper(stub);
        return _this;
    }
    StubStorage.prototype.query = function (query) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.stubHelper.getQueryResultAsList(query)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    StubStorage.prototype.get = function (id, storageOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        convector_core_1.InvalidIdError.test(id);
                        return [4, this.stubHelper.getStateAsObject(id, storageOptions)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    StubStorage.prototype.set = function (id, content, storageOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        convector_core_1.InvalidIdError.test(id);
                        return [4, this.stubHelper.putState(id, JSON.stringify(content), storageOptions)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    StubStorage.prototype.delete = function (id, storageOptions) {
        if (storageOptions === void 0) { storageOptions = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        convector_core_1.InvalidIdError.test(id);
                        if (!storageOptions.privateCollection) return [3, 2];
                        return [4, this.stubHelper.getStub()
                                .deletePrivateData(storageOptions.privateCollection, id)];
                    case 1: return [2, _a.sent()];
                    case 2: return [4, this.stubHelper.getStub().deleteState(id)];
                    case 3: return [2, _a.sent()];
                }
            });
        });
    };
    StubStorage.prototype.history = function (id) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        convector_core_1.InvalidIdError.test(id);
                        return [4, this.stubHelper.getHistoryForKeyAsList(id)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    return StubStorage;
}(convector_core_1.BaseStorage));
exports.StubStorage = StubStorage;
//# sourceMappingURL=stub-storage.js.map