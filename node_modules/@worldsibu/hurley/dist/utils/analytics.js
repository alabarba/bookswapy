"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Insight = require("insight");
var fs = require("fs-extra");
var path_1 = require("path");
var logs_1 = require("./logs");
var Analytics = (function () {
    function Analytics() {
        this.trackingCode = 'UA-131737083-1';
        var pkg = JSON.parse(fs.readFileSync(path_1.join(__dirname, '../../package.json')).toString());
        this.insight = new Insight({
            trackingCode: this.trackingCode,
            pkg: pkg,
            optOut: undefined
        });
    }
    Analytics.prototype.init = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                logs_1.l('Hurley collects anonymous usage statistics to improve the tool over time');
                this.permissionAcceptance();
                return [2];
            });
        });
    };
    Analytics.prototype.trackNetworkNew = function (label) {
        this.track(CategoryEnum.NETWORK, ActionEnum.NEW, label);
    };
    Analytics.prototype.trackNetworkClean = function (label) {
        this.track(CategoryEnum.NETWORK, ActionEnum.CLEAN, label);
    };
    Analytics.prototype.trackChaincodeInstall = function (label) {
        this.track(CategoryEnum.CHAINCODE, ActionEnum.INSTALL, label);
    };
    Analytics.prototype.trackChaincodeUpgrade = function (label) {
        this.track(CategoryEnum.CHAINCODE, ActionEnum.UPGRADE, label);
    };
    Analytics.prototype.trackChaincodeInvoke = function (label) {
        this.track(CategoryEnum.CHAINCODE, ActionEnum.INVOKE, label);
    };
    Analytics.prototype.track = function (category, action, label) {
        if (!this.insight.optOut) {
            this.insight.trackEvent({
                category: category,
                action: action,
                label: label
            });
        }
    };
    Analytics.prototype.permissionAcceptance = function () {
        this.insight.trackEvent({
            category: CategoryEnum.TRACKING,
            action: 'accept',
        });
    };
    Analytics.prototype.permissionRejection = function () {
        this.insight.trackEvent({
            category: CategoryEnum.TRACKING,
            action: 'reject',
        });
    };
    Analytics.prototype.returnAccepted = function () {
        this.insight.trackEvent({
            category: CategoryEnum.TRACKING,
            action: 'returning',
            label: 'accepted before'
        });
    };
    Analytics.prototype.returnRejected = function () {
        this.insight.trackEvent({
            category: CategoryEnum.TRACKING,
            action: 'returning',
            label: 'rejected before'
        });
    };
    return Analytics;
}());
exports.Analytics = Analytics;
var CategoryEnum;
(function (CategoryEnum) {
    CategoryEnum["NETWORK"] = "network";
    CategoryEnum["CHAINCODE"] = "chaincode";
    CategoryEnum["TRACKING"] = "tracking";
})(CategoryEnum = exports.CategoryEnum || (exports.CategoryEnum = {}));
var ActionEnum;
(function (ActionEnum) {
    ActionEnum["NEW"] = "new";
    ActionEnum["CLEAN"] = "clean";
    ActionEnum["INSTALL"] = "install";
    ActionEnum["UPGRADE"] = "upgrade";
    ActionEnum["INVOKE"] = "invoke";
})(ActionEnum = exports.ActionEnum || (exports.ActionEnum = {}));
//# sourceMappingURL=analytics.js.map