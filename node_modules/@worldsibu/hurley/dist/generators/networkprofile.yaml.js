"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var base_1 = require("./base");
var path_1 = require("path");
var NetworkProfileYamlGeneratorOptions = (function () {
    function NetworkProfileYamlGeneratorOptions() {
    }
    return NetworkProfileYamlGeneratorOptions;
}());
exports.NetworkProfileYamlGeneratorOptions = NetworkProfileYamlGeneratorOptions;
var NetworkProfileYamlGenerator = (function (_super) {
    tslib_1.__extends(NetworkProfileYamlGenerator, _super);
    function NetworkProfileYamlGenerator(filename, path, options) {
        var _this = _super.call(this, filename, path) || this;
        _this.options = options;
        _this.contents = "name: \"" + _this.options.org + "\"\nversion: \"1.0\"\n\nclient:\n    organization: " + _this.options.org + "MSP\n    credentialStore:\n        path: " + (_this.options.insideDocker ? "/config/.hfc-" + _this.options.org : _this.options.networkRootPath + "/.hfc-" + _this.options.org) + " \n        cryptoStore:\n            path: " + (_this.options.insideDocker ? "/config/.hfc-" + _this.options.org : _this.options.networkRootPath + "/.hfc-" + _this.options.org) + " \n\nchannels:" + _this.options.channels.map(function (channel) { return "\n    " + channel + ":\n        orderers:\n            - orderer.hurley.lab\n        peers:" + _this.options.orgs.map(function (cOrg) { return "\n            peer0." + cOrg + ".hurley.lab:\n                endorsingPeer: true\n                chaincodeQuery: true\n                ledgerQuery: true\n                eventSource: true\n        "; }).join('') + "\n\n"; }).join('') + "\norganizations:" + _this.options.orgs.map(function (cOrg) { return "\n    " + cOrg + "MSP:\n        mspid: " + cOrg + "MSP\n        peers:\n            - peer0." + cOrg + ".hurley.lab\n        certificateAuthorities:\n            - ca." + cOrg + ".hurley.lab\n        adminPrivateKey:\n            path: " + (_this.options.insideDocker ? "/config" : _this.options.networkRootPath) + "/artifacts/crypto-config/peerOrganizations/" + cOrg + ".hurley.lab/users/Admin@" + cOrg + ".hurley.lab/msp/keystore/\n        signedCert:\n            path: " + (_this.options.insideDocker ? "/config" : _this.options.networkRootPath) + "/artifacts/crypto-config/peerOrganizations/" + cOrg + ".hurley.lab/users/Admin@" + cOrg + ".hurley.lab/msp/signcerts/\n"; }).join('') + "\norderers:\n    orderer.hurley.lab:\n        url: grpc://" + (_this.options.insideDocker ? "orderer.hurley.lab" : 'localhost') + ":7050\n        grpcOptions:\n            ssl-target-name-override: orderer.hurley.lab\n            grpc-max-send-message-length: -1\n        tlsCACerts:\n            path: " + (_this.options.insideDocker ? "/config" : _this.options.networkRootPath) + "/artifacts/crypto-config/ordererOrganizations/hurley.lab/orderers/orderer.hurley.lab/msp/tlscacerts/tlsca.hurley.lab-cert.pem\n\npeers:" + _this.options.orgs.map(function (cOrg, index) { return "\n    peer0." + cOrg + ".hurley.lab:\n        url: grpc://" + (_this.options.insideDocker ? "peer0." + cOrg + ".hurley.lab" : 'localhost') + ":" + (_this.options.insideDocker ? '7051' : "7" + index + "51") + "\n        eventUrl: grpc://" + (_this.options.insideDocker ? "peer0." + cOrg + ".hurley.lab" : 'localhost') + ":" + (_this.options.insideDocker ? '7052' : "7" + index + "52") + "\n        grpcOptions:\n            ssl-target-name-override: peer0." + cOrg + ".hurley.lab\n            grpc.keepalive_time_ms: 600000\n        tlsCACerts:\n            path: " + (_this.options.insideDocker ? "/config" : _this.options.networkRootPath) + "/artifacts/crypto-config/peerOrganizations/" + cOrg + ".hurley.lab/peers/peer0." + cOrg + ".hurley.lab/msp/tlscacerts/tlsca." + cOrg + ".hurley.lab-cert.pem\n"; }).join('') + "\ncertificateAuthorities:" + _this.options.orgs.map(function (cOrg, index) { return "\n    ca." + cOrg + ".hurley.lab:\n        url: http://" + (_this.options.insideDocker ? "ca." + cOrg + ".hurley.lab" : 'localhost') + ":" + (_this.options.insideDocker ? '7054' : "7" + index + "54") + "\n        httpOptions:\n            verify: false\n        tlsCACerts:\n            path: " + (_this.options.insideDocker ? "/config" : _this.options.networkRootPath) + "/artifacts/crypto-config/peerOrganizations/" + cOrg + ".hurley.lab/ca/ca." + cOrg + ".hurley.lab-cert.pem\n        registrar:\n            - enrollId: admin\n              enrollSecret: adminpw\n        caName: ca." + cOrg + ".hurley.lab\n"; }).join('') + "\n  ";
        _this.success = path_1.join(path, 'networkprofile.yaml.successful');
        return _this;
    }
    return NetworkProfileYamlGenerator;
}(base_1.BaseGenerator));
exports.NetworkProfileYamlGenerator = NetworkProfileYamlGenerator;
//# sourceMappingURL=networkprofile.yaml.js.map